plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

// .env 파일 로드를 위한 설정
def localProperties = new Properties()
def localPropertiesFile = new File(rootProject.projectDir.parentFile, 'assets/config/.env')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def googleMapsApiKey = localProperties.getProperty('GOOGLE_MAPS_API_KEY')
if (googleMapsApiKey == null || googleMapsApiKey.isEmpty()) {
    // .env 파일에 키가 없거나 비어있는 경우 에러 처리
    throw new RuntimeException("Google Maps API 키가 설정되지 않았습니다. assets/config/.env 파일에 GOOGLE_MAPS_API_KEY를 추가하세요.")
}

// 키스토어 속성 파일 읽기
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "✅ 키스토어 파일 로드 성공: ${keystorePropertiesFile.absolutePath}"
    println "✅ 키스토어 속성: ${keystoreProperties}"
} else {
    println "❌ 키스토어 파일을 찾을 수 없음: ${keystorePropertiesFile.absolutePath}"
    throw new RuntimeException("키스토어 파일을 찾을 수 없습니다: ${keystorePropertiesFile.absolutePath}")
}

android {
    namespace = "com.ikjun.walk"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.ikjun.walk"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = 1
        versionName = "1.0.0"

        // API 키를 Manifest 파일에 전달
        manifestPlaceholders += [GOOGLE_MAPS_API_KEY: googleMapsApiKey]
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            ndk.debugSymbolLevel = "SYMBOL_TABLE"
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    // ✅ Firebase BoM
    implementation platform("com.google.firebase:firebase-bom:34.0.0")

    // ✅ 사용할 Firebase SDK
    implementation "com.google.firebase:firebase-analytics"
    implementation "com.google.firebase:firebase-auth"

    // 예: Firestore 사용 시
    implementation "com.google.firebase:firebase-firestore"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
}


flutter {
    source = "../.."
}
