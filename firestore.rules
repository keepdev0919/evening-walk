rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 사용자 데이터
    match /users/{userId} {
      allow get, list: if request.auth != null && request.auth.uid == userId;
      
      allow create: if request.auth != null && 
                    request.auth.uid == userId &&
                    validateUserDataCreate(request.resource.data);
      
      allow update: if request.auth != null && 
                    request.auth.uid == userId &&
                    validateUserDataUpdate(request.resource.data, resource.data);
      
      // 산책 세션
      match /walk_sessions/{sessionId} {
        allow read, write: if request.auth != null && 
                           request.auth.uid == userId &&
                           validateWalkSession(request.resource.data);
      }
    }
    
    // 기본 차단
    match /{document=**} {
      allow read, write: if false;
    }
  }
  
  // 사용자 데이터 생성 시 검증 (모든 필수 필드 필요)
  function validateUserDataCreate(data) {
    return data != null && 
           data is map &&
           data.userId is string &&
           data.nickname is string && data.nickname.size() > 0 && data.nickname.size() <= 50 &&
           data.age is number && data.age >= 1 && data.age <= 120 &&
           data.region is string && data.region.size() > 0 && data.region.size() <= 100 &&
           data.sex is string && data.sex in ['남성', '여성'];
  }
  
  // 사용자 데이터 업데이트 시 검증 (일부 필드만 업데이트 가능)
  function validateUserDataUpdate(newData, existingData) {
    return newData != null && 
           newData is map &&
           newData.userId == existingData.userId && // userId 변경 불가
           (newData.nickname == null || (newData.nickname is string && newData.nickname.size() > 0 && newData.nickname.size() <= 50)) &&
           (newData.age == null || (newData.age is number && newData.age >= 1 && newData.age <= 120)) &&
           (newData.region == null || (newData.region is string && newData.region.size() > 0 && newData.region.size() <= 100)) &&
           (newData.sex == null || (newData.sex is string && newData.sex in ['남성', '여성']));
  }
  
  // 산책 세션 데이터 검증
  function validateWalkSession(data) {
    return data != null && 
           data is map &&
           data.userId is string &&
           data.startTime is timestamp &&
           data.selectedMate is string && data.selectedMate in ['혼자', '연인', '친구'] &&
           data.startLocation is map &&
           data.destinationLocation is map &&
           data.waypointLocation is map;
  }
}
